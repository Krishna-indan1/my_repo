AMI:
Ami 
Create Instance 
Add security group http
Open terminal :
>yum update -y
>yum install httpd -y
>rpmquery httpd
>cd /var/www/html/
>echo "This is my web server" > index.html
>ll
>cat index.html
>cd
>systemctl start httpd
>systemctl status httpd
>systemctl enable httpd
>curl http://localhost
>ip a s
>curl http://ipaddress
>yum install vsftpd -y
>yum install cifs-utils -y
>yum install nfs-utils -y
>yum install tree -y
>cd /tmp/
>touch glenn.txt{1..100}
>ll
>cd

Rightclick on the instance > img & temp >Create image
Click on AMI to the left side  > click on the created image checkbox & launch inst
Click on the new ami created and open the terminal 
Change root user to ec2user
Type rpmquery httpd
Go to the AMI > select AMI > click on Actions > Copy ami > change region > copy ami 
Go to the region where ami was copied , open ami and check status of ami 
Then select the changed region and launch new instance.
Paste public id on browser and check 

Cd /tmp/

EBS:
Disk Partitioning: increase and decrease Volume size:

1.	Create ec2 instance 
2.	Create volume >gp2>5gib>100/3000> create>name: data-disk 
3.	Select volume > attach volume to the instance created > /dev/sdb
4.	Open instance in terminal 
5.	Lsblk
6.	Df -h
7.	Mkfs. <tab> <tab>
8.	Mkfs.ext4 /dev/xvdb
9.	Mkdir /data
10.	Mount /dev/xvdb/data
11.	Blkid >copy uuid of xvdb and paste it below 
12.	Vim /etc/fstab {uuid = …. /data /ext4 defaults 0 0)
13.	Df -h
14.	Cd /data
15.	Touch glenn.txt
16.	Mount -a
17.	Reboot the instance and check if the data is mounted or not 
18.	Cd /data
19.	Ls
20.	Df -h


21.	To increase the size: 
22.	Go to volume > actions > Modify volume > change size to 10gib
23.	Resize2fs /dev/xvdb
24.	Df -h

25.	To decrease volume :
26.	  We cannot decrease volume directly by modifying the volume size , we need to create a new vol of desired decreased size and move the contents of old vol to new vol and delete old vol :
27.	Create new vol with 4gib>attach vol> /dev/sdc
28.	Lsblk
29.	Df -h
30.	Mkfs.ext4 /dev/xvdc
31.	Mkdir glen-data
32.	Mount /dev/xvdc /glenn-data
33.	Cd /data
34.	 Mv * /glenn-data/
35.	Blkid
36.	Vim /etc/fstab(paste uuid of xvdc and erase uuid of xvdb)
37.	Umount /data
38.	Reboot and check
39.	Modify root volume i.e /dev/xvda)
40.	Modify vol from aws
41.	Df -h
42.	Xfs_growfs -d /dev/xvda1
43.	Growpart /dev/xvda 1
44.	Xfs_growfs -d /dev/xvda1
45.	Df-h

EFS:
Create 3 instances (linux , redhat , ubuntu )
		2 instances can have one availability zone: eg :1a and 1 instance can have a different availability zone: eg: 1b
		#edit security group: add nfs 2049
		

		After creating instances open your terminal:
		Linux : 
		Cat /etc/os-release
		Rpmquery nfs-utils
		Mkdir /nfs-data
		#go to your aws console : 
		Open EFS > new file system > refresh > sec group - add your own secgroup inplace of default > edit disable file protection > attach
		Sudo mount ….. /nfs-data/
		Df -h
		Cd /nfs-data/
		Touch glenn.txt{1..10}
		Ll
		Now open Redhat instance :
		Cat /etc/os-release
		Yum install nfs-utils -y
		Rpmquery nfs-utils
		Mkdir /efs-data
		Sudo mount ….. /nfs-data/
		Df -h
		Cd /nfs-data/
		Touch glenn.txt{1..10}
		Ll
		Ubuntu:
		Apt update 
		Apt install nfs-common
		Mkdir /remote-data/
		Sudo mount /remote-data/
		Ll
		

		Go on your aws : 
		Choose a new region and a create a new instance 
		Create a fs and disable fsp > go to networking and check security group , chose the sec group you assigned
		#inbound rules : add nfs 2049 
		Go to old region > create replica >choose dest >browse efs >create replica
		Go to your terminal 
		Df -h
		Mkdir /data-mum
		Sudo mount 
		Cd /data-mum
		Ll


Snapshot:

create instance 
		create vol > gp2 > 5gib > 100/3000 >create > name: data-disk 
		select vol > attach vol to instance created > /dev/sdb
		open terminal 
		lsblk
		df -h
		mkfs. <tab><tab>
		mkfs.ext4 /dev/xvdb
		mkdir /data
		mount /dev/xvdb /data
		blkid (copy uuid =.. /data /ext4 defaults 0 0)
		vim /etc/fstab
		df -h
		cd /data
		touch glenn.txt{1..5}
		

		go to volume > action > action snapshot 
		go to snapshot > action > copy snapshot > add desire region
		go to selected region > create instance , create vol from the copied snapshot > attach it to the instance > /dev/sdb
		

		open the created instance in terminal
		mkdir /snap-data
		mount /dev/xvdb /data
		cd /snap-data
		ls 

S3:
Browser: AWS 
		Search s3 Bucket
		Bucket name
		ACL enable
		acknowledge checkmark
		create bucket
		add and upload file /folder
		Go in file 
		click url and open in new tab : you will not be able to see 
		then go to file 
		and edit -> perimission -> everyone -> read -> save
		click url and open in new tab : you will be able to see 
		

		Launch an EC2 instance 
		

		In Terminal:
		1.yum install automake fuse fuse-devel gcc-c++ git libcurl-devel libxml2-devel make openssl-devel
		2 git clone https://github.com/s3fs-fuse/s3fs-fuse.git
		3 ls -la
		4 cd s3fs-fuse
		5 ./autogen.sh
		6 ./configure --prefix=/usr --with-openssl
		7 make
		8 sudo make install
		9 which s3fs
		

		In Browser : AWS
		Search IAM
		create user -> username -> attach policy select (round option) 
		permission policy name -> search s3full -> next
		create user -> .......(write name of your choice)
		create access key
		application running on aws (tick)
		acknowledge (tick) -> next
		decription tag -> create access key
		download .csv file
		search IAM -> add MFA -> device name -(mobile-authentication)(or you can write anyname)
		

		Go to Mobile:
		open google authenticator app
		scan QR code
		

		In Browser:
		Enter code 1(after 30 sec)
		Enter code 2
		Add MFA
		

		

		In Terminal: 
		

		10 touch /etc/passwd-s3fs
		11 vim /etc/passwd-s3fs
		

		Open .csv file that you have downloaded before -> copy the first key in vim editor
		-> first key:second key
		

		12 chmod 640 /etc/passwd-s3fs
		13 mkdir /mys3bucket
		14 s3fs sruthy90 -o use_cache=/tmp -o allow_other -o uid=1001 -o mp_umask=002 -o multireq_max=5 /mys3bucket
		15 df -h
		16 cd /mys3bucket/
		17 ls -la

AMI:
Ami 
		Create Instance 
		Add security group http
		Open terminal :
		>yum update -y
		>yum install httpd -y
		>rpmquery httpd
		>cd /var/www/html/
		>echo "This is my web server" > index.html
		>ll
		>cat index.html
		>cd
		>systemctl start httpd
		>systemctl status httpd
		>systemctl enable httpd
		>curl http://localhost
		>ip a s
		>curl http://ipaddress
		>yum install vsftpd -y
		>yum install cifs-utils -y
		>yum install nfs-utils -y
		>yum install tree -y
		>cd /tmp/
		>touch glenn.txt{1..100}
		>ll
		>cd
		

		Rightclick on the instance > img & temp >Create image
		Click on AMI to the left side > click on the created image checkbox & launch inst
		Click on the new ami created and open the terminal 
		Change root user to ec2user
		Type rpmquery httpd
		Go to the AMI > select AMI > click on Actions > Copy ami > change region > copy ami 
		Go to the region where ami was copied , open ami and check status of ami 
		Then select the changed region and launch new instance.
		Paste public id on browser and check 
		

		Cd /tmp/




